-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.billing_config (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_name character varying NOT NULL,
  company_address text,
  company_tax_id character varying,
  company_email character varying,
  company_phone character varying,
  default_tax_rate numeric DEFAULT 21.00,
  default_payment_terms character varying DEFAULT '15 días'::character varying,
  invoice_prefix character varying DEFAULT 'INV'::character varying,
  invoice_start_number integer DEFAULT 1,
  logo_url text,
  footer_text text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT billing_config_pkey PRIMARY KEY (id)
);
CREATE TABLE public.customers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  email character varying UNIQUE,
  phone character varying,
  address text,
  tax_id character varying,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT customers_pkey PRIMARY KEY (id)
);
CREATE TABLE public.distribution_channels (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL UNIQUE,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  logo text,
  person_id uuid,
  CONSTRAINT distribution_channels_pkey PRIMARY KEY (id),
  CONSTRAINT distribution_channels_person_id_fkey FOREIGN KEY (person_id) REFERENCES public.people(id)
);
CREATE TABLE public.documents (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  expense_id uuid,
  original_name text NOT NULL,
  storage_path text NOT NULL,
  mime_type text NOT NULL,
  size integer NOT NULL,
  uploaded_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT documents_pkey PRIMARY KEY (id),
  CONSTRAINT documents_uploaded_by_fkey FOREIGN KEY (uploaded_by) REFERENCES auth.users(id),
  CONSTRAINT documents_expense_id_fkey FOREIGN KEY (expense_id) REFERENCES public.expenses(id)
);
CREATE TABLE public.expense_categories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  description character varying NOT NULL UNIQUE,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT expense_categories_pkey PRIMARY KEY (id)
);
CREATE TABLE public.expense_subcategories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  category_id uuid NOT NULL,
  description character varying NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT expense_subcategories_pkey PRIMARY KEY (id),
  CONSTRAINT expense_subcategories_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.expense_categories(id)
);
CREATE TABLE public.expenses (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  description text NOT NULL,
  amount numeric NOT NULL,
  vendor character varying,
  date date NOT NULL,
  status character varying NOT NULL DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'approved'::character varying, 'paid'::character varying, 'rejected'::character varying]::text[])),
  payment_method character varying,
  reference character varying,
  notes text,
  receipt_url text,
  property_id uuid,
  is_recurring boolean DEFAULT false,
  next_due_date date,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  reservation_id uuid,
  category_id uuid,
  subcategory_id uuid,
  vendor_id uuid,
  CONSTRAINT expenses_pkey PRIMARY KEY (id),
  CONSTRAINT expenses_vendor_id_fkey FOREIGN KEY (vendor_id) REFERENCES public.people(id),
  CONSTRAINT expenses_subcategory_id_fkey FOREIGN KEY (subcategory_id) REFERENCES public.expense_subcategories(id),
  CONSTRAINT expenses_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.expense_categories(id)
);
CREATE TABLE public.guide_categories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  icon character varying,
  order_index integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT guide_categories_pkey PRIMARY KEY (id)
);
CREATE TABLE public.guide_content (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  category_id uuid NOT NULL,
  title character varying NOT NULL,
  description text,
  content text NOT NULL,
  image_url text,
  external_link text,
  link_text character varying,
  tags ARRAY,
  is_featured boolean DEFAULT false,
  order_index integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT guide_content_pkey PRIMARY KEY (id),
  CONSTRAINT guide_content_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.guide_categories(id)
);
CREATE TABLE public.ical_configs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  property_id uuid NOT NULL,
  last_sync timestamp with time zone,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  ical_url text NOT NULL,
  CONSTRAINT ical_configs_pkey PRIMARY KEY (id),
  CONSTRAINT ical_configs_property_id_fkey FOREIGN KEY (property_id) REFERENCES public.properties(id)
);
CREATE TABLE public.invoice_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  invoice_id uuid NOT NULL,
  description text NOT NULL,
  quantity numeric NOT NULL DEFAULT 1,
  unit_price numeric NOT NULL DEFAULT 0,
  total numeric NOT NULL DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT invoice_items_pkey PRIMARY KEY (id),
  CONSTRAINT invoice_items_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES public.invoices(id)
);
CREATE TABLE public.invoices (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  number character varying NOT NULL UNIQUE,
  customer_id uuid,
  customer_name character varying NOT NULL,
  customer_email character varying,
  customer_address text,
  customer_tax character varying,
  issue_date date NOT NULL,
  due_date date NOT NULL,
  subtotal numeric NOT NULL DEFAULT 0,
  tax_rate numeric NOT NULL DEFAULT 21.00,
  tax_amount numeric NOT NULL DEFAULT 0,
  total numeric NOT NULL DEFAULT 0,
  status character varying NOT NULL DEFAULT 'draft'::character varying CHECK (status::text = ANY (ARRAY['draft'::character varying, 'sent'::character varying, 'paid'::character varying, 'overdue'::character varying, 'cancelled'::character varying]::text[])),
  notes text,
  payment_terms character varying DEFAULT '15 días'::character varying,
  reservation_id uuid,
  property_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT invoices_pkey PRIMARY KEY (id),
  CONSTRAINT invoices_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id)
);
CREATE TABLE public.payments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  invoice_id uuid,
  invoice_number character varying,
  customer_name character varying NOT NULL,
  amount numeric NOT NULL,
  method character varying NOT NULL CHECK (method::text = ANY (ARRAY['credit_card'::character varying, 'bank_transfer'::character varying, 'cash'::character varying, 'paypal'::character varying, 'check'::character varying, 'bizum'::character varying]::text[])),
  status character varying NOT NULL DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'completed'::character varying, 'failed'::character varying, 'refunded'::character varying]::text[])),
  date timestamp with time zone NOT NULL,
  reference character varying,
  notes text,
  fee numeric DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  reservation_id uuid,
  CONSTRAINT payments_pkey PRIMARY KEY (id),
  CONSTRAINT payments_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES public.invoices(id)
);
CREATE TABLE public.people (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  person_type USER-DEFINED NOT NULL,
  first_name text,
  last_name text,
  company_name text,
  fiscal_id text,
  fiscal_id_type text,
  country text,
  email text,
  phone text,
  address text,
  city text,
  state text,
  postal_code text,
  notes text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT people_pkey PRIMARY KEY (id)
);
CREATE TABLE public.properties (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  description text,
  type text NOT NULL,
  address text NOT NULL,
  city text NOT NULL,
  postal_code text,
  country text NOT NULL,
  bedrooms integer DEFAULT 0,
  bathrooms integer DEFAULT 0,
  capacity integer DEFAULT 1,
  area integer DEFAULT 0,
  base_price numeric DEFAULT 0,
  cleaning_fee numeric DEFAULT 0,
  security_deposit numeric DEFAULT 0,
  check_in_time time without time zone DEFAULT '15:00:00'::time without time zone,
  check_out_time time without time zone DEFAULT '11:00:00'::time without time zone,
  min_stay integer DEFAULT 1,
  max_stay integer DEFAULT 30,
  is_active boolean DEFAULT true,
  amenities ARRAY DEFAULT '{}'::text[],
  images ARRAY DEFAULT '{}'::text[],
  status text DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'inactive'::text, 'maintenance'::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  channel_ratings jsonb DEFAULT '{}'::jsonb,
  channel_configuration jsonb DEFAULT '{}'::jsonb,
  tenant_id integer,
  CONSTRAINT properties_pkey PRIMARY KEY (id),
  CONSTRAINT properties_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.property_channels (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  property_id uuid NOT NULL,
  channel_id uuid NOT NULL,
  is_enabled boolean DEFAULT true,
  sync_enabled boolean DEFAULT true,
  auto_update_ratings boolean DEFAULT true,
  external_property_id character varying,
  external_listing_id character varying,
  external_place_id character varying,
  listing_url text,
  review_url text,
  property_rating numeric DEFAULT 0.00,
  property_review_count integer DEFAULT 0,
  last_rating_update timestamp with time zone,
  price_adjustment_percentage numeric DEFAULT 0.00,
  commission_override_charge numeric,
  commission_override_sale numeric,
  availability_sync_enabled boolean DEFAULT true,
  instant_booking_enabled boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT property_channels_pkey PRIMARY KEY (id),
  CONSTRAINT property_channels_property_id_fkey FOREIGN KEY (property_id) REFERENCES public.properties(id),
  CONSTRAINT property_channels_channel_id_fkey FOREIGN KEY (channel_id) REFERENCES public.distribution_channels(id)
);
CREATE TABLE public.property_settings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  property_id uuid NOT NULL UNIQUE,
  commission_percentages jsonb DEFAULT '{"airbnb": 15, "direct": 0, "booking": 15, "expedia": 15}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  auto_checkin boolean DEFAULT false,
  auto_cleaning boolean DEFAULT false,
  dynamic_pricing boolean DEFAULT false,
  checkin_time time without time zone DEFAULT '15:00:00'::time without time zone,
  checkout_time time without time zone DEFAULT '11:00:00'::time without time zone,
  CONSTRAINT property_settings_pkey PRIMARY KEY (id),
  CONSTRAINT property_settings_new_property_id_fkey FOREIGN KEY (property_id) REFERENCES public.properties(id)
);
CREATE TABLE public.reservations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  guest jsonb NOT NULL,
  property_id uuid NOT NULL,
  check_in date NOT NULL,
  check_out date NOT NULL,
  nights integer NOT NULL,
  guests integer NOT NULL DEFAULT 1,
  adults integer NOT NULL DEFAULT 1,
  children integer NOT NULL DEFAULT 0,
  status text NOT NULL DEFAULT 'pending'::text,
  payment_status text NOT NULL DEFAULT 'pending'::text CHECK (payment_status = ANY (ARRAY['pending'::text, 'paid'::text, 'partial'::text, 'failed'::text, 'refunded'::text])),
  total_amount numeric NOT NULL DEFAULT 0,
  base_amount numeric NOT NULL DEFAULT 0,
  cleaning_fee numeric NOT NULL DEFAULT 0,
  taxes numeric NOT NULL DEFAULT 0,
  notes text,
  special_requests text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  external_id text,
  external_source text,
  ical_uid text,
  channel_commission numeric NOT NULL DEFAULT 0,
  collection_commission numeric NOT NULL DEFAULT 0,
  property_channel_id uuid NOT NULL,
  person_id uuid,
  CONSTRAINT reservations_pkey PRIMARY KEY (id),
  CONSTRAINT reservations_new_property_id_fkey FOREIGN KEY (property_id) REFERENCES public.properties(id),
  CONSTRAINT reservations_property_channel_fkey FOREIGN KEY (property_channel_id) REFERENCES public.property_channels(id),
  CONSTRAINT reservations_person_id_fkey FOREIGN KEY (person_id) REFERENCES public.people(id)
);
CREATE TABLE public.tenants (
  id integer NOT NULL DEFAULT nextval('tenants_id_seq'::regclass),
  name text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT tenants_pkey PRIMARY KEY (id)
);
CREATE TABLE public.users (
  id uuid NOT NULL,
  email text NOT NULL UNIQUE,
  full_name text NOT NULL,
  role text NOT NULL CHECK (role = ANY (ARRAY['admin'::text, 'manager'::text, 'operator'::text, 'viewer'::text])),
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  last_login timestamp with time zone,
  tenant_id integer,
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id),
  CONSTRAINT users_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);